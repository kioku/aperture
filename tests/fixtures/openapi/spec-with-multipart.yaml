openapi: 3.0.0
info:
  title: API with Multipart Endpoints
  version: 1.0.0
servers:
  - url: https://api.example.com
paths:
  /users:
    get:
      operationId: getUsers
      tags:
        - users
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
  /users/{userId}:
    get:
      operationId: getUserById
      tags:
        - users
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
  /users/{userId}/avatar:
    post:
      operationId: uploadUserAvatar
      tags:
        - users
      summary: Upload user avatar
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                metadata:
                  type: object
                  properties:
                    description:
                      type: string
      responses:
        '200':
          description: Avatar uploaded successfully
  /documents:
    post:
      operationId: uploadDocument
      tags:
        - documents
      summary: Upload a document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                title:
                  type: string
      responses:
        '201':
          description: Document uploaded
  /reports/generate:
    post:
      operationId: generateReport
      tags:
        - reports
      summary: Generate a report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportType:
                  type: string
                  enum: [summary, detailed]
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
      responses:
        '200':
          description: Report generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  reportId:
                    type: string
                  status:
                    type: string